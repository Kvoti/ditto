{"version":3,"sources":["ditto/static/chat/js/chat.js"],"names":[],"mappings":"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","file":"ditto/static/chat/js/chat.js","sourcesContent":["// This is the abstract chat application that's unrelated to the\n// details of the UI. It handles the chat connection and\n// sending/receiving messages etc. To adopt the Flux architecture we'd\n// need to split this out in to Store, Action and Dispatcher\n// components.\n\nvar connection, jid, chatroom, nick;\nvar change_callbacks = [];\nvar chatStatus = {\n    away: 'Away',\n    chat: 'Free for chat',\n    dnd: 'Do not disturb',\n    xa: 'Extended away',\n};\nvar composedMessageChangeAt = {};\nvar stillTypingTimeout = 5000;\n\nvar state = {\n    connectionStatus: 'connecting',\n    friends: [\n    ],\n    friendStatus: {},\n    messages: [\n    ],\n    chatroomMessages: [\n\t\n    ],\n    userMeta: {},\n    whosTyping: [],\n    chatroomPresence: [],\n};\n\n// Chat public API ----------------------------------\nfunction connect (server, _jid, password, _chatroom, _nick, log=false) {\n    jid = _jid;\n    chatroom = _chatroom;\n    nick = _nick;\n    connection = new Strophe.Connection('ws://' + server + ':5280/ws-xmpp');\n    if (log) {\n        setupLogging();\n    }\n    connection.connect(\n        jid,\n\tpassword,\n        onConnect\n    );\n};\n\nfunction getState () {\n    return state;\n}\n\nfunction whosOnline () {\n    return {'online': state.chatroomPresence};\n}\n\nfunction getUserProfiles () {\n    return {'profiles': state.userMeta};\n}\n\nfunction setStatus (code, message) {\n    var pres = $pres();\n    if (code) {\n\tpres.c('show').t(code).up();\n    }\n    if (message) {\n\tpres.c('status').t(message);\n    }\n    connection.send(pres.tree());\n};\n\nfunction sendGroupMessage (message) {\n    connection.muc.groupchat(chatroom, message);\n}\n\nfunction sendPrivateMessage (to, message) {\n    var payload = $msg({\n\tto: getBareJID(to),\n\tfrom: jid,\n\ttype: 'chat'\n    }).c('body').t(message);\n    connection.chatstates.addActive(payload);\n    delete composedMessageChangeAt[to];\n    connection.send(payload.tree());\n    // TODO handle error on message submit\n    addMessage(\n\tStrophe.getNodeFromJid(jid),\n        to,\n\tnew Date(),\n\tmessage\n    );\n};\n\nfunction markMessagesRead (messageIds) {\n    messageIds.forEach(id => {\n\tstate.messages[id].isRead = true;\n    });\n    emitChange();\n};\n\nfunction sendIsTyping (to) {\n    if (!composedMessageChangeAt[to]) {\n\tconnection.chatstates.sendComposing(\n\t    getBareJID(to)\n\t);\n\tcomposedMessageChangeAt[to] = new Date();\n\tsetTimeout(() => {checkImStillTyping(to)}, stillTypingTimeout);\n    }\n}\n\nfunction setAvatar (avatar) {\n    // TODO no convenience function provided for making vcards?\n    var role = Strophe.xmlElement('ROLE');\n    role.appendChild(Strophe.xmlTextNode(chatConf.role));\n\n    var photo = Strophe.xmlElement('PHOTO');\n    photo.appendChild(Strophe.xmlTextNode(avatar));  // TODO prob make this full URI of avatar?\n    // TODO looks like strophe.vcard doesn't allow setting multiple elements?\n    // (sort of doesn't matter cos the data you set isn't validated, which is ok\n    // while we assume no other clients will connect)\n    var vcard = Strophe.xmlElement('XXX');\n    vcard.appendChild(role);\n    vcard.appendChild(photo);\n\n    // TODO handle error\n    connection.vcard.set(\n\tfunction (r) { },  // TODO handle something here?\n\tvcard\n    );\n\n    // Mongooseim doesn't do pubsub so sadly the avatar change is not broadcast.\n    // Here we update userMeta so, at least, the current client updates\n    // Not yet sure what the pubsub workaround is. Custom message in chatroom perhaps?\n    state.userMeta[Strophe.getNodeFromJid(jid)].avatar = avatar;\n    emitChange();\n}\n// --------------------------------------------------\n\n// TODO flux example does a lot more complicated things with callbacks\nfunction addChangeListener (callback) {\n    change_callbacks.push(callback);\n};\n\nfunction removeChangeListener (callback) {\n    change_callbacks.splice(change_callbacks.indexOf(callback), 1);\n};\n\nfunction emitChange () {\n    change_callbacks.forEach(callback => callback());\n};\n\nfunction setupLogging () {\n    connection.rawInput = function (data) { console.log('RECV: ', data); };\n    connection.rawOutput = function (data) { console.log('RECV: ', data); };\n};\n\nfunction onConnect (status_code) {\n    if (status_code == Strophe.Status.CONNECTED) {\n        sendInitialPresence();\n        configurePrivateChat();\n\tloadArchivedMessages();\n        configureFriends();\n        configureUserMeta();\n        connection.chatstates.init(connection);\n        joinChatroom();\n    }\n    setConnectionStatus(status_code);\n};\n\nfunction sendInitialPresence () {\n    connection.send($pres().tree());\n};\n\nfunction configurePrivateChat () {\n    connection.addHandler(handlePrivateMessage, null, 'message', 'chat',  null);\n    connection.addHandler(handlePresence, null, 'presence', null,  null); \n};\n\nfunction loadArchivedMessages () {\n    connection.mam.init(connection);\n    connection.mam.query(\n        Strophe.getBareJidFromJid(jid),\n        {\n            // TODO load last N messages for each chat not across all chats\n            // 'with': Strophe.getBareJidFromJid(this.state.talkingTo),\n            'before': \"\",\n            'max': 50,\n            onMessage: handleArchivedPrivateMessage\n        }\n    );\n};\n\nfunction configureFriends () {\n    connection.roster.init(connection);\n    connection.roster.registerRequestCallback(acceptFriendRequest);\n    connection.roster.registerCallback(handleRoster);\n    connection.roster.get();\n};\n\nfunction configureUserMeta () {\n    connection.vcard.init(connection);\n    getUserMeta(Strophe.getNodeFromJid(jid));\n};\n\nfunction joinChatroom () {\n    connection.muc.init(connection);\n    connection.muc.join(\n        chatroom,\n        nick,\n        handleGroupMessage,\n        handleGroupPresence\n    );\n};\n\nfunction setConnectionStatus (status_code) {\n    var status;\n    if (status_code == Strophe.Status.CONNECTING) {\n\tstatus = 'connecting';\n    } else if (status_code == Strophe.Status.CONNFAIL) {\n\tstatus = 'failed to connect';\n    } else if (status_code == Strophe.Status.DISCONNECTING) {\n\tstatus = 'disconnecting';\n    } else if (status_code == Strophe.Status.DISCONNECTED) {\n\tstatus = 'disconnected';\n    } else if (status_code == Strophe.Status.CONNECTED) {\n\tstatus = 'connected';\n    }\n    state.connectionStatus = status;\n    emitChange();\n};\n\nfunction addFriend (friend) {\n    connection.roster.subscribe(getBareJID(jid));\n};\n\nvar handlePresence = function (pres) {\n    var msg = $(pres);\n    var from = Strophe.getNodeFromJid(msg.attr('from'));\n    var type = msg.attr('type');\n    var code;\n    var customMessage;\n    var newState;\n    var status;\n    var friendStatus = {};\n\n    if (type === 'unavailable') {\n\tstatus = {};\n    } else {\n\tcode = msg.find('show').text();\n\tcustomMessage = msg.find('status').text();\n\tstatus = {\n\t    code: code,\n\t    message: customMessage\n\t};\n    }\n    state.friendStatus[from] = status;\n    emitChange();\n    return true;\n};\n\nvar handlePrivateMessage = function (msg) {\n    var msg = $(msg);\n    var body = msg.find(\"body:first\").text();\n    var from = Strophe.getNodeFromJid(msg.attr(\"from\"));\n    var to = Strophe.getNodeFromJid(msg.attr(\"to\"));\n    var when = new Date();\n    var composing = msg.find('composing');\n    var active = msg.find('active');\n    var newState;\n    \n    if (composing.length) {\n        state.whosTyping.push(from);\n        emitChange();\n    } else {\n\tif (active.length) {\n\t    state.whosTyping.splice(state.whosTyping.indexOf(from), 1);\n\t}\n\tif (body) {\n\t    addMessage(\n\t\tfrom,\n\t\tto,\n\t\twhen,\n\t\tbody\n\t    );\n\t}\n    }\n    return true;\n};\n\nvar handleArchivedPrivateMessage = function (msg) {\n    var msg = $(msg);\n    if (msg.find('[type=groupchat]').length === 0) {\n\tvar body = msg.find(\"body:first\").text();\n\tvar from = Strophe.getNodeFromJid(msg.find('message').attr(\"from\"));\n\tvar to = Strophe.getNodeFromJid(msg.find('message').attr(\"to\"));\n\tvar when = new Date(msg.find('delay').attr('stamp'));\n        // TODO could be smarter here and only emitChange() when the archive has all been loaded?\n\taddMessage(\n\t    from,\n\t    to,\n\t    when,\n\t    body,\n\t    true  // isRead  TODO can't pass args by name?\n\t);\n    }\n    return true;\n};\n\nvar handleGroupMessage = function (msg) {\n    var msg = $(msg);\n    var body = msg.find(\"body:first\").text();\n    var from = Strophe.getResourceFromJid(msg.attr(\"from\"));\n    var when = msg.find('delay');\n    if (when.length) {\n\twhen = new Date(when.attr('stamp'));\n    } else {\n\twhen = new Date();\n    }\n    if (from) {\n\t// TODO always get an 'empty' message from the room\n\t// itself, not sure why\n\taddGroupMessage(\n\t    from,\n\t    when,\n\t    body\n\t);\n    }\n    return true;\n};\n\nvar handleGroupPresence = function (pres) {\n    var msg = $(pres);\n    var nick_taken = msg.find('conflict');\n    var from = msg.attr('from').split('/')[1];\n    var newState;\n    if (nick_taken.length) {\n\t// TODO do something with this\n    }\n    var added = msg.find('item[role!=none]');\n    if (added.length) {\n        state.chatroomPresence.push(from);\n    }\n    var removed = msg.find('item[role=none]');\n    if (removed.length) {\n        state.chatroomPresence.splice(state.chatroomPresence.indexOf(from), 1);\n    }\n    // First time we enter the chatroom for a new network the room\n    // needs to be created and configured\n    var isNewRoom = msg.find('status[code=201]');\n    if (isNewRoom.length) {\n        // TODO handle failure\n        connection.muc.createInstantRoom(chatroom);\n    }\n    emitChange();\n    return true;\n};\n\nfunction getBareJID (node) {\n    var domain = Strophe.getDomainFromJid(chatConf.me);\n    return node + '@' + domain;\n};\n\nvar addMessage = function (from, to, when, message, isRead=false) {\n    state.messages.push({\n\tfrom: from,\n\tto: to,\n\twhen: when,\n\tmessage: message,\n\tisRead: isRead,\n\t// TODO of course this should be a globally unique id, but\n\t// this'll do for now until I figure out how/if xmpp can\n\t// handle the read state of messages\n\tid: state.messages.length\n    });\n    emitChange();\n};\n\nfunction addGroupMessage (from, when, message) {\n    state.chatroomMessages.push(\n\t{\n\t    from: from,\n\t    when: when,\n\t    message: message\n\t}\n    );\n    emitChange();\n}\n\nfunction acceptFriendRequest (from) {\n    connection.roster.authorize(from);\n    return true;\n}\n\nfunction handleRoster (roster, item) {\n    var friends = [];\n    roster.forEach((friend, i) => {\n\tvar username = Strophe.getNodeFromJid(friend.jid);\n\tif (friend.subscription === 'both') {\n\t    friends.push(username);\n\t    getUserMeta(username);\n\t}\n    });\n    state.friends = friends;\n    emitChange();\n    return true;\n}\n\nfunction checkImStillTyping (to) {\n    var lastChange = composedMessageChangeAt[to];\n    if (lastChange) {\n\tvar now = new Date();\n\tif (now - lastChange > stillTypingTimeout) {\n\t    delete composedMessageChangeAt[to];\n\t    connection.chatstates.sendActive(\n\t\tgetBareJID(to)\n\t    );\n\t} else {\n\t    window.setTimeout(() => { checkImStillTyping(to); }, stillTypingTimeout);\n\t}\n    }\n}\n\nfunction getUserMeta (user) {\n    var jid = getBareJID(user);\n    if (state.userMeta[user]) {\n\treturn;\n    }\n    connection.vcard.get(\n\tvcard => {\n\t    vcard = $(vcard);\n\t    var setUserMeta = {};\n\t    var newState;\n\t    var role = vcard.find('ROLE').text();\n\t    var avatar = vcard.find('PHOTO').text();\n\t    state.userMeta[user] = {role: role, avatar: avatar};\n            emitChange();\n\t},\n\tjid\n    );\n};\n\nexport {\n    connect, getState, addChangeListener, removeChangeListener,\n    whosOnline, getUserProfiles,\n    chatStatus, setStatus,\n    addFriend,\n    setAvatar,\n    sendPrivateMessage, sendGroupMessage, sendIsTyping,\n    markMessagesRead,\n};\n"]}